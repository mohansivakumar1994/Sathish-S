{"version":3,"sources":["../node_modules/prismjs/components/prism-jsx.min.js"],"names":["t","n","util","clone","languages","javascript","jsx","extend","tag","pattern","inside","insertBefore","spread","punctuation","attr-value","script","script-punctuation","alias","rest","e","content","map","join","a","s","g","length","o","i","type","tagName","pop","push","openedBraces","p","splice","Token","hooks","add","language","tokens","Prism"],"mappings":"4CAAA,SAAAA,GACA,IAAAC,EAAAD,EAAAE,KAAAC,MAAAH,EAAAI,UAAAC,YACAL,EAAAI,UAAAE,IAAAN,EAAAI,UAAAG,OAAA,SAAAN,GAAAD,EAAAI,UAAAE,IAAAE,IAAAC,QAAA,4LAAgQT,EAAAI,UAAAE,IAAAE,IAAAE,OAAAF,IAAAC,QAAA,kBAAAT,EAAAI,UAAAE,IAAAE,IAAAE,OAAA,cAAAD,QAAA,yDAAsIT,EAAAI,UAAAO,aAAA,sBACtYC,OAAA,CACAH,QAAA,6CACAC,OAAA,CACAG,YAAA,cACAC,aAAA,SAGGd,EAAAI,UAAAE,IAAAE,KAAAR,EAAAI,UAAAO,aAAA,uBACHI,OAAA,CACAN,QAAA,4CACAC,OAAA,CACAM,qBAAA,CACAP,QAAA,UACAQ,MAAA,eAEAC,KAAAlB,EAAAI,UAAAE,KAEAW,MAAA,wBAEGjB,EAAAI,UAAAE,IAAAE,KAEH,IAAAW,EAAA,SAAAA,EAAAnB,GACA,OAAAA,EAAA,iBAAAA,IAAA,iBAAAA,EAAAoB,QAAApB,EAAAoB,QAAApB,EAAAoB,QAAAC,IAAAF,GAAAG,KAAA,QAEAC,EAAA,SAAAA,EAAAtB,GACA,QAAAuB,EAAA,GAAAC,EAAA,EAA2BA,EAAAxB,EAAAyB,OAAcD,IAAA,CACzC,IAAAE,EAAA1B,EAAAwB,GACAG,GAAA,EAEA,oBAAAD,IAAA,QAAAA,EAAAE,MAAAF,EAAAP,QAAA,YAAAO,EAAAP,QAAA,GAAAS,KAAA,OAAAF,EAAAP,QAAA,GAAAA,QAAA,GAAAA,QAAAI,EAAAE,OAAA,GAAAF,IAAAE,OAAA,GAAAI,UAAAX,EAAAQ,EAAAP,QAAA,GAAAA,QAAA,KAAAI,EAAAO,MAAA,OAAAJ,EAAAP,QAAAO,EAAAP,QAAAM,OAAA,GAAAN,SAAAI,EAAAQ,KAAA,CACAF,QAAAX,EAAAQ,EAAAP,QAAA,GAAAA,QAAA,IACAa,aAAA,IACOT,EAAAE,OAAA,mBAAAC,EAAAE,MAAA,MAAkDF,EAAAP,QAAAI,IAAAE,OAAA,GAAAO,eAAAT,EAAAE,OAAA,GAAAF,IAAAE,OAAA,GAAAO,aAAA,mBAAAN,EAAAE,MAAA,MAAqIF,EAAAP,QAAAI,IAAAE,OAAA,GAAAO,eAAAL,GAAA,IAAAA,GAAA,iBAAAD,IAAAH,EAAAE,OAAA,OAAAF,IAAAE,OAAA,GAAAO,aAAA,CAC9L,IAAAC,EAAAf,EAAAQ,GACAF,EAAAxB,EAAAyB,OAAA,qBAAAzB,EAAAwB,EAAA,mBAAAxB,EAAAwB,EAAA,GAAAI,QAAAK,GAAAf,EAAAlB,EAAAwB,EAAA,IAAAxB,EAAAkC,OAAAV,EAAA,MAAAA,EAAA,qBAAAxB,EAAAwB,EAAA,mBAAAxB,EAAAwB,EAAA,GAAAI,QAAAK,EAAAf,EAAAlB,EAAAwB,EAAA,IAAAS,EAAAjC,EAAAkC,OAAAV,EAAA,KAAAA,KAAAxB,EAAAwB,GAAA,IAAAzB,EAAAoC,MAAA,aAAAF,EAAA,KAAAA,GAGAP,EAAAP,SAAA,iBAAAO,EAAAP,SAAAG,EAAAI,EAAAP,WAIApB,EAAAqC,MAAAC,IAAA,0BAAAtC,IACA,QAAAA,EAAAuC,UAAA,QAAAvC,EAAAuC,WAAAhB,EAAAvB,EAAAwC,UA7CA,CA+CCC","file":"135.753619f3890e9cb3c58c.worker.js","sourcesContent":["!function (t) {\n  var n = t.util.clone(t.languages.javascript);\n  t.languages.jsx = t.languages.extend(\"markup\", n), t.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i, t.languages.jsx.tag.inside.tag.pattern = /^<\\/?[^\\s>\\/]*/i, t.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i, t.languages.insertBefore(\"inside\", \"attr-name\", {\n    spread: {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        punctuation: /\\.{3}|[{}.]/,\n        \"attr-value\": /\\w+/\n      }\n    }\n  }, t.languages.jsx.tag), t.languages.insertBefore(\"inside\", \"attr-value\", {\n    script: {\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        \"script-punctuation\": {\n          pattern: /^=(?={)/,\n          alias: \"punctuation\"\n        },\n        rest: t.languages.jsx\n      },\n      alias: \"language-javascript\"\n    }\n  }, t.languages.jsx.tag);\n\n  var e = function e(t) {\n    return t ? \"string\" == typeof t ? t : \"string\" == typeof t.content ? t.content : t.content.map(e).join(\"\") : \"\";\n  },\n      a = function a(n) {\n    for (var s = [], g = 0; g < n.length; g++) {\n      var o = n[g],\n          i = !1;\n\n      if (\"string\" != typeof o && (\"tag\" === o.type && o.content[0] && \"tag\" === o.content[0].type ? \"</\" === o.content[0].content[0].content ? s.length > 0 && s[s.length - 1].tagName === e(o.content[0].content[1]) && s.pop() : \"/>\" === o.content[o.content.length - 1].content || s.push({\n        tagName: e(o.content[0].content[1]),\n        openedBraces: 0\n      }) : s.length > 0 && \"punctuation\" === o.type && \"{\" === o.content ? s[s.length - 1].openedBraces++ : s.length > 0 && s[s.length - 1].openedBraces > 0 && \"punctuation\" === o.type && \"}\" === o.content ? s[s.length - 1].openedBraces-- : i = !0), (i || \"string\" == typeof o) && s.length > 0 && 0 === s[s.length - 1].openedBraces) {\n        var p = e(o);\n        g < n.length - 1 && (\"string\" == typeof n[g + 1] || \"plain-text\" === n[g + 1].type) && (p += e(n[g + 1]), n.splice(g + 1, 1)), g > 0 && (\"string\" == typeof n[g - 1] || \"plain-text\" === n[g - 1].type) && (p = e(n[g - 1]) + p, n.splice(g - 1, 1), g--), n[g] = new t.Token(\"plain-text\", p, null, p);\n      }\n\n      o.content && \"string\" != typeof o.content && a(o.content);\n    }\n  };\n\n  t.hooks.add(\"after-tokenize\", function (t) {\n    (\"jsx\" === t.language || \"tsx\" === t.language) && a(t.tokens);\n  });\n}(Prism);"],"sourceRoot":""}