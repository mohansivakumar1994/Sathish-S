{"version":3,"sources":["../node_modules/prismjs/components/prism-lua.js"],"names":["Prism","languages","lua","comment","string","pattern","greedy","number","keyword","function","operator","lookbehind","punctuation"],"mappings":"2CAAAA,MAAAC,UAAAC,IAAA,CACAC,QAAA,yCAEAC,OAAA,CACAC,QAAA,uFACAC,QAAA,GAEAC,OAAA,wGACAC,QAAA,0HACAC,SAAA,2BACAC,SAAA,0CAEAL,QAAA,qBACAM,YAAA,IAEAC,YAAA","file":"154.753619f3890e9cb3c58c.worker.js","sourcesContent":["Prism.languages.lua = {\n  'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n  // \\z may be used to skip the following space\n  'string': {\n    pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n    greedy: true\n  },\n  'number': /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n  'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n  'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n  'operator': [/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/, {\n    // Match \"..\" but don't break \"...\"\n    pattern: /(^|[^.])\\.\\.(?!\\.)/,\n    lookbehind: true\n  }],\n  'punctuation': /[\\[\\](){},;]|\\.+|:+/\n};"],"sourceRoot":""}