{"version":3,"sources":["../node_modules/prismjs/components/prism-javascript.js"],"names":["Prism","languages","javascript","extend","keyword","number","function","operator","insertBefore","regex","pattern","lookbehind","greedy","function-variable","alias","constant","template-string","inside","interpolation","interpolation-punctuation","rest","string","markup","script","js"],"mappings":"2CAAAA,MAAAC,UAAAC,WAAAF,MAAAC,UAAAE,OAAA,SACAC,QAAA,8TACAC,OAAA,wGAEAC,SAAA,gDACAC,SAAA,mGAEAP,MAAAC,UAAAO,aAAA,wBACAC,MAAA,CACAC,QAAA,iHACAC,YAAA,EACAC,QAAA,GAGAC,oBAAA,CACAH,QAAA,wHACAI,MAAA,YAEAC,SAAA,uBAEAf,MAAAC,UAAAO,aAAA,uBACAQ,kBAAA,CACAN,QAAA,mCACAE,QAAA,EACAK,OAAA,CACAC,cAAA,CACAR,QAAA,YACAO,OAAA,CACAE,4BAAA,CACAT,QAAA,UACAI,MAAA,eAEAM,KAAA,OAIAC,OAAA,cAIArB,MAAAC,UAAAC,WAAA,mBAAAe,OAAA,cAAAA,OAAAG,KAAApB,MAAAC,UAAAC,WAEAF,MAAAC,UAAAqB,QACAtB,MAAAC,UAAAO,aAAA,gBACAe,OAAA,CACAb,QAAA,4CACAC,YAAA,EACAM,OAAAjB,MAAAC,UAAAC,WACAY,MAAA,sBACAF,QAAA,KAKAZ,MAAAC,UAAAuB,GAAAxB,MAAAC,UAAAC","file":"128.753619f3890e9cb3c58c.worker.js","sourcesContent":["Prism.languages.javascript = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n  'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n    alias: 'function'\n  },\n  'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        pattern: /\\${[^}]+}/,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: null // See below\n\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\nPrism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('markup', 'tag', {\n    'script': {\n      pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n      alias: 'language-javascript',\n      greedy: true\n    }\n  });\n}\n\nPrism.languages.js = Prism.languages.javascript;"],"sourceRoot":""}