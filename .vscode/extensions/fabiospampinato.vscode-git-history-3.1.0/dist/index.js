"use strict";var bt=Object.create;var F=Object.defineProperty;var Bt=Object.getOwnPropertyDescriptor;var Et=Object.getOwnPropertyNames;var $t=Object.getPrototypeOf,It=Object.prototype.hasOwnProperty;var Tt=(t,e)=>{for(var o in e)F(t,o,{get:e[o],enumerable:!0})},z=(t,e,o,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Et(e))!It.call(t,i)&&i!==o&&F(t,i,{get:()=>e[i],enumerable:!(r=Bt(e,i))||r.enumerable});return t};var n=(t,e,o)=>(o=t!=null?bt($t(t)):{},z(e||!t||!t.__esModule?F(o,"default",{value:t,enumerable:!0}):o,t)),St=t=>z(F({},"__esModule",{value:!0}),t);var oe={};Tt(oe,{activate:()=>ee});module.exports=St(oe);var w=n(require("vscode"));var Pt=require("buffer"),wt=n(require("fs")),W=n(require("path")),Ct=n(require("vscode"));var A=n(require("vscode"),1),Ht={error:t=>{A.default.window.showErrorMessage(t)},info:t=>{A.default.window.showInformationMessage(t)},warn:t=>{A.default.window.showWarningMessage(t)}},l=Ht;var V=require("child_process");var L=require("buffer"),H=t=>{if(L.Buffer.isBuffer(t))return!0;throw new Error(`Expected a Buffer, got ${t}`)};async function kt(t,e,o){return new Promise((r,i)=>{let s=Array.isArray(e)?e:[],m=Array.isArray(e)?o:e,a=(0,V.spawn)(t,s,{windowsHide:!0,...m}),u=[],f=[];a.stderr?.on("data",c=>{H(c),u.push(c)}),a.stdout?.on("data",c=>{H(c),f.push(c)}),a.on("error",c=>{i(c)}),a.on("exit",c=>{let T=c===0,S=Buffer.concat(u),v=Buffer.concat(f);r({ok:T,code:c,stderr:S,stdout:v})})})}var O=kt;var k=O;var J=n(require("fs"),1),R=n(require("vscode"),1);var Q=n(require("fs"),1),X=n(require("vscode"),1),Rt=()=>{let t=X.default.window.activeTextEditor?.document;if(!t||t.isUntitled)return;let e=t.uri.fsPath;if(Q.default.existsSync(e))return e},p=Rt;var q=t=>typeof t=="object"&&t!==null;var Ut=()=>{let t=R.default.window.tabGroups.activeTabGroup.activeTab?.input;if(!q(t)||!("uri"in t))return;let e=t.uri;if(!(e instanceof R.default.Uri))return;let o=e.fsPath;if(!J.default.existsSync(o))return;let r=p();if(o!==r)return o},C=Ut;var Dt=()=>p()||C(),K=Dt;var et=n(require("path"),1);var Z=n(require("vscode"),1),jt=()=>Z.default.workspace.workspaceFolders?.map(t=>t.uri.fsPath)||[],tt=jt;var Gt=()=>{let t=K(),e=tt();return t?et.default.dirname(t):e[0]},ot=Gt;var rt=n(require("vscode"),1),Nt=t=>rt.default.workspace.getConfiguration().get(t),U=Nt;var it=n(require("fs"),1),h=n(require("path"),1),nt=n(require("process"),1),Mt=(t,e=nt.default.cwd(),o=25)=>{let r=h.default.normalize(h.default.join(e,t)),i=1;for(;;){if(i>o)return;if(it.default.existsSync(r))return r;e=h.default.resolve(e,"..");let s=h.default.normalize(h.default.join(e,t));if(s===r)return;r=s,i+=1}},at=Mt;var st=n(require("path"),1);var Yt=()=>{let t=ot();if(!t)return;let e=at(".git",t);if(e)return st.default.dirname(e)},D=Yt;var b=n(require("vscode"),1),_t=(t,e,o)=>{let r=b.default.Uri.file(t),i=b.default.Uri.file(e);b.default.commands.executeCommand("vscode.diff",r,i,o)},B=_t;var j=n(require("vscode"),1),Wt=(t,e)=>{let o=j.default.Uri.file(t);j.default.commands.executeCommand("vscode.open",o,e)},E=Wt;var x=n(require("vscode"),1),zt={boolean:async t=>await x.default.window.showInformationMessage(t,"Yes","No")==="Yes",password:async(t,e)=>await x.default.window.showInputBox({placeHolder:t,value:e,password:!0}),select:async(t,e)=>{if(e.length)return await x.default.window.showQuickPick(e,{placeHolder:t})},string:async(t,e)=>await x.default.window.showInputBox({placeHolder:t,value:e})},G=zt;var mt=n(require("fs")),ct=n(require("path"));var N={exec:async(t,e)=>(await k("git",e,{cwd:t})).stdout,getCommits:async(t,e)=>(await N.exec(t,["log","-n","100000","--pretty=format:%aE^^^^%aN^^^^%aD^^^^%H^^^^%s","--",e])).toString().split(/\r\n?|\n/g).filter(Boolean).map(s=>s.split("^^^^")).map(([s,m,a,u,f])=>({author_email:s,author_name:m,date:a,hash:u,message:f})),getContentAtCommit:async(t,e,o)=>{try{let r=ct.default.relative(t,e).replace(/\\+/g,"/");return await N.exec(t,["show",`${o}:${r}`])}catch(r){console.error(r);return}},getContentAtHead:async(t,e)=>mt.default.promises.readFile(e)},g=N;var Y=n(require("fs")),ht=n(require("os")),I=n(require("path")),gt=n(require("vscode"));var ft=n(require("crypto"),1),Lt=ft.default.webcrypto,lt=Lt;function y(t){let e,o=0;return()=>((!e||o===e.length)&&(e=new t(65536/(t.BYTES_PER_ELEMENT*8)),o=0,lt.getRandomValues(e)),e[o++])}function Vt(t,e){let o=0,r=e;return()=>(r===e&&(o=t(),r=0),o&1<<r++?1:0)}var Ot={get1:Vt(y(Uint8Array),8),get8:y(Uint8Array),get16:y(Uint16Array),get32:y(Uint32Array),get64:y(BigUint64Array)},pt=Ot;var $=Array.from({length:256},(t,e)=>e.toString(16).padStart(2,"0")),Qt=()=>{let t="";for(let e=0;e<4;e++){let o=pt.get32();t+=$[o>>>24&255],t+=$[o>>>16&255],t+=$[o>>>8&255],t+=$[o&255]}return t},dt=Qt;var ut=dt;var Xt=t=>{let e=t.getFullYear(),o=`${t.getMonth()+1}`.padStart(2,"0"),r=`${t.getDate()}`.padStart(2,"0"),i=`${t.getHours()}`.padStart(2,"0"),s=`${t.getMinutes()}`.padStart(2,"0");return`${e}-${o}-${r} ${i}:${s}`},P=async()=>{let t=C(),e=p(),o=e||t,r=!e&&!!t,i=!r,s=i?gt.default.window.activeTextEditor?.document.languageId:void 0;if(!o)return l.error("You have to open a file first");let m=D();if(!m)return l.error("This file does not belong to a git repository");let a=await g.getCommits(m,o);if(!a.length)return l.error("No commits involving this file found");let u=qt(a),f=await G.select("Select a commit...",u);if(!f)return;let c=a.indexOf(f.commit),T=a[c+1],S=a[c-1],v=await g.getContentAtCommit(m,o,f.commit.hash);return v?{filePath:o,gitPath:m,isBinary:r,isTextual:i,language:s,commits:a,prevCommit:T,commit:f.commit,nextCommit:S,content:v}:l.error("Could not get this commit's content, please report the error")},qt=t=>{let e=Jt();return t.map(o=>{let r=o.message,i=e.details.author.enabled&&o.author_name,s=e.details.date.enabled&&Xt(new Date(o.date)),m=e.details.hash.enabled&&o.hash.slice(0,e.details.hash.length),a=[i,s,m].filter(Zt).join(" - ");return{commit:o,label:r,detail:a}})},d=async(t,e,o)=>{let{name:r,ext:i}=I.default.parse(t),s=`${r}@${o?.hash.slice(0,7)||"null"}${i}`,m=I.default.join(ht.default.tmpdir(),ut()),a=I.default.join(m,s);return await Y.default.promises.mkdir(m,{recursive:!0}),await Y.default.promises.writeFile(a,e),a},Jt=()=>{let t=U("gitHistory"),e=M(t?.details?.author?.enabled)?t.details.author.enabled:!0,o=M(t?.details?.date?.enabled)?t.details.date.enabled:!0,r=M(t?.details?.hash?.enabled)?t.details.hash.enabled:!1,i=Kt(t?.details?.hash?.length)?t.details.hash.length:7;return{details:{author:{enabled:e},date:{enabled:o},hash:{enabled:r,length:i}}}},M=t=>typeof t=="boolean",Kt=t=>typeof t=="number",Zt=t=>typeof t=="string",_=(t,e)=>t.length<=e?t:`${t.slice(0,e-1)}\u2026`;var xt=async()=>{let t=await P();if(!t)return;let e=await d(t.filePath,t.content,t.commit);E(e)},yt=async()=>{let t=await P();if(!t)return;let e=await d(t.filePath,t.content,t.commit),o=Ct.default.ViewColumn.Beside;E(e,{viewColumn:o})},vt=async()=>{let t=await P();if(!t)return;let e=t.prevCommit?await g.getContentAtCommit(t.gitPath,t.filePath,t.prevCommit.hash):Pt.Buffer.alloc(0);if(!e)return l.error(`Failed to read file content at commit ${t.prevCommit?.hash}`);let o=await d(t.filePath,e,t.prevCommit),r=await d(t.filePath,t.content,t.commit),i=`${W.default.basename(t.filePath)} - ${_(t.commit.message,60)}`;B(o,r,i)},Ft=async()=>{let t=await P();if(!t)return;let e=await d(t.filePath,t.content,t.commit),o=await g.getContentAtHead(t.gitPath,t.filePath),r=await d(t.filePath,o),i=`${W.default.basename(t.filePath)} - ${_(t.commit.message,60)}`;B(e,r,i)},At=async()=>{let t=await P();t&&await wt.default.promises.writeFile(t.filePath,t.content)};var ee=()=>{w.default.commands.registerCommand("gitHistory.openFileAtCommit",xt),w.default.commands.registerCommand("gitHistory.openFileAtCommitToSide",yt),w.default.commands.registerCommand("gitHistory.diffFileAtCommit",vt),w.default.commands.registerCommand("gitHistory.diffFileAtCommitAgainstCurrent",Ft),w.default.commands.registerCommand("gitHistory.restoreFileAtCommit",At)};0&&(module.exports={activate});
